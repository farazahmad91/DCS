@model IEnumerable<API.DBContext.Entities.User>
@{
	Layout = null;
	var Ischecked = "";
}
@foreach (var item in Model)
{
    <tr>
        <td hidden>
            @Html.DisplayFor(modelItem => item.Id)
        </td>
        <td><input type="checkbox" class="userCheckbox"></td>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UserName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Role)
        </td>
        <td>
            <span class="btn btn-sm btn-outline-danger" onclick="ShowPassword('@item.PasswordHash', '@item.Name');"><i class="fa fa-eye"></i> Show</span>
        </td>
        <td>
            @* @Html.DisplayFor(modelItem => item.IsActive) *@
            <div class="form-check form-switch">
                @if (@item.IsActive==true)
								{
									Ischecked = "checked";
								}
								else
								{
									Ischecked = "";
								}
                <input class="form-check-input" type="checkbox" role="switch" onchange="UserStatus(@item.Id)" id="IsActive" @Ischecked>
												<label class="form-check-label" for="Status"></label>
											</div>
        </td>
        <td>
            @* @Html.DisplayFor(modelItem => item.IsVerified) *@
            <div class="form-check form-switch">
                 @if (@item.IsVerified==true)
								{
									Ischecked = "checked";
								}
								else
								{
									Ischecked = "";
								}
                <input class="form-check-input" type="checkbox" role="switch" onchange="UserStatus(@item.Id)" id="IsVerified" @Ischecked>
												<label class="form-check-label" for="Status"></label>
											</div>
        </td>
        <td>
           @*  @Html.DisplayFor(modelItem => item.IsLocked) *@
               <div class="form-check form-switch">
                @if (@item.IsLocked==true)
								{
									Ischecked = "checked";
								}
								else
								{
									Ischecked = "";
								}
                <input class="form-check-input" type="checkbox" role="switch" onchange="UserStatus(@item.Id)" id="IsLocked" @Ischecked>
                                                    <label class="form-check-label" for="Status"></label>
                                                </div>
        </td>
         <td>
            <div class="dropdown">
                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Actions
                </button>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <a class="dropdown-item" onclick="EditDoctor(@item.Id)"><span class="fas fa-edit" style="color: Blue"></span> Edit</a>
                    <a class="dropdown-item" onclick="doctorDetails(@item.Id)"><i class="fas fa-info-circle" style="color: darkgreen"></i> Show Detail</a>
                </div>
            </div>
        </td>
    </tr>
}
<!-- Your script below -->
<script>
    $(document).ready(function () {
        const singleSelectRadio = document.getElementById('singleSelect');
        const multiSelectRadio = document.getElementById('multiSelect');
        const selectAllRadio = document.getElementById('selectAll');
        const userCheckboxes = document.querySelectorAll('.userCheckbox');

        singleSelectRadio.addEventListener('change', function () {
            if (this.checked) {
                userCheckboxes.forEach(function (checkbox) {
                    checkbox.type = 'radio';
                });
            }
        });

        multiSelectRadio.addEventListener('change', function () {
            if (this.checked) {
                userCheckboxes.forEach(function (checkbox) {
                    checkbox.type = 'checkbox';
                });
            }
        });

        selectAllRadio.addEventListener('change', function () {
            if (this.checked) {
                userCheckboxes.forEach(function (checkbox) {
                    checkbox.checked = true;
                });
            }
        });

        function getSelectedEmails() {
            const selectedEmails = [];
            userCheckboxes.forEach(function (checkbox) {
                if (checkbox.checked) {
                    const userEmail = checkbox.parentElement.nextElementSibling.textContent.trim();
                    selectedEmails.push(userEmail);
                }
            });
            return selectedEmails;
        }

        document.getElementById('btnsendEmail').addEventListener('click', function () {
            const selectedEmails = getSelectedEmails();
            if (selectedEmails.length > 0) {
                console.log('Selected emails:', selectedEmails);
                sendBulkEmails(selectedEmails);
            } else {
                alert("Please select at least one email.");
            }
        });

        function sendBulkEmails(emailList) {
            document.getElementById("sendSpin").classList.add("spinner-border", "spinner-border-sm", "spinner-1x");
            document.getElementById("btnsendEmail").textContent = "Sending...";

            if (IsValidate("cls")) {
                const subject = $("#txtSubject").val();
                const message = $("#txtMessage").val();
                const imageFile = $('#txtImage')[0].files[0];

                const emailDataArray = emailList.map(email => ({
                    Emails: email,
                    Subject: subject,
                    ImagePath: imageFile ? imageFile.name : "",
                    Message: message
                }));

                const formData = new FormData();
                formData.append("emailDataArray", JSON.stringify(emailDataArray));
                if (imageFile) {
                    formData.append("imageFile", imageFile);
                }

                $.ajax({
                    url: '/Email/SendBulkEmails',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        console.log(response);
                    },
                    error: function (xhr) {
                        console.log(xhr);
                    }
                });
            }
        }
    });
</script>
