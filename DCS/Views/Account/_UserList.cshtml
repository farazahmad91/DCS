@model IEnumerable<API.DBContext.Entities.User>
@{
	Layout = null;
	var Ischecked = "";
}
@foreach (var item in Model)
{
    <tr>
        <td hidden>
            @Html.DisplayFor(modelItem => item.UserId)
        </td>
        <td><input type="checkbox" class="userCheckbox"></td>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UserName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Role)
        </td>
        <td>
            <span class="btn btn-sm btn-outline-danger" onclick="ShowPassword('@item.PasswordHash', '@item.UserId');"><i class="fa fa-eye"></i> Show</span>
        </td>
        <td>
            @* @Html.DisplayFor(modelItem => item.IsActive) *@
            <div class="form-check form-switch">
                @if (@item.IsActive==true)
								{
									Ischecked = "checked";
								}
								else
								{
									Ischecked = "";
								}
                <input type="checkbox" name="switch3" onchange="UserStatus(@item.UserId)" id="IsActive_@item.UserId" data-switch="success" @Ischecked>
                <label for="IsActive_@item.UserId" data-on-label="ON" data-off-label="OFF"></label>
											</div>
        </td>
        <td>
            @* @Html.DisplayFor(modelItem => item.IsVerified) *@
            <div class="form-check form-switch">
                 @if (@item.IsVerified==true)
								{
									Ischecked = "checked";
								}
								else
								{
									Ischecked = "";
								}
                <input type="checkbox" name="switch3" onchange="UserStatus(@item.UserId)" id="IsVerified_@item.UserId" data-switch="success" @Ischecked>
                <label for="IsVerified_@item.UserId" data-on-label="ON" data-off-label="OFF"></label>
											</div>
        </td>
        <td>
           @*  @Html.DisplayFor(modelItem => item.IsLocked) *@
               <div class="form-check form-switch">
                @if (@item.IsLocked==true)
								{
									Ischecked = "checked";
								}
								else
								{
									Ischecked = "";
								}
                <input type="checkbox" name="switch3" onchange="UserStatus(@item.UserId)" id="IsLocked_@item.UserId" data-switch="success" @Ischecked>
                <label for="IsLocked_@item.UserId" data-on-label="ON" data-off-label="OFF"></label>
                                                </div>
        </td>
        
    </tr>
}
<!-- Your script below -->
<script>
    $(document).ready(function () {
        const singleSelectRadio = document.getElementById('singleSelect');
        const multiSelectRadio = document.getElementById('multiSelect');
        const selectAllRadio = document.getElementById('selectAll');
        const userCheckboxes = document.querySelectorAll('.userCheckbox');

        singleSelectRadio.addEventListener('change', function () {
            if (this.checked) {
                userCheckboxes.forEach(function (checkbox) {
                    checkbox.type = 'radio';
                });
            }
        });

        multiSelectRadio.addEventListener('change', function () {
            if (this.checked) {
                userCheckboxes.forEach(function (checkbox) {
                    checkbox.type = 'checkbox';
                });
            }
        });

        selectAllRadio.addEventListener('change', function () {
            if (this.checked) {
                userCheckboxes.forEach(function (checkbox) {
                    checkbox.checked = true;
                });
            }
        });

        function getSelectedEmails() {
            const selectedEmails = [];

            userCheckboxes.forEach(function (checkbox) {
                if (checkbox.checked) {
                    // Get the parent <tr> element
                    const parentRow = checkbox.closest('tr');

                    // Get all <td> elements within the parent <tr>
                    const tdElements = parentRow.querySelectorAll('td');

                    // Check if there are at least 3 <td> elements
                    if (tdElements.length >= 3) {
                        // Get the text content of the third <td> element
                        const userEmail = tdElements[3].textContent.trim();
                        selectedEmails.push(userEmail);
                    }
                }
            });

            return selectedEmails;
        }


        document.getElementById('btnsendEmail').addEventListener('click', function () {
            const selectedEmails = getSelectedEmails();
            if (selectedEmails.length > 0) {
                console.log('Selected emails:', selectedEmails);
                sendBulkEmails(selectedEmails);
            } else {
                alert("Please select at least one email.");
            }
        });

        function sendBulkEmails(emailList) {
            document.getElementById("sendSpin").classList.add("spinner-border", "spinner-border-sm", "spinner-1x");
            document.getElementById("btnsendEmail").textContent = "Sending...";

            if (IsValidate("cls")) {
                const subject = $("#txtSubject").val();
                const message = $("#txtMessage").val();
                const imageFile = $('#txtImage')[0].files[0];

                const emailDataArray = emailList.map(email => ({
                    Emails: email,
                    Subject: subject,
                    ImagePath: imageFile ? imageFile.name : "",
                    Message: message
                }));

                const formData = new FormData();
                formData.append("emailDataArray", JSON.stringify(emailDataArray));
                if (imageFile) {
                    formData.append("imageFile", imageFile);
                }

                $.ajax({
                    url: '/Email/SendBulkEmails',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        Info(result.statusCode, result.responseText);
                    },
                    error: function (xhr) {
                        Info(-1, xhr.responseText);
                    }
                });
            }
        }
    });
    function UserStatus(id) {
        var param = {
            UserId: id,
            IsActive: $("#IsActive_" + id).prop("checked"),
            IsVerified: $("#IsVerified_" + id).prop("checked"),
            IsLocked: $("#IsLocked_" + id).prop("checked"),
        };
        console.log(param);
        $.post("/UpdateUserStatus", param).done(function (result) {
            Info(result.statusCode, result.responseText);

        }).fail(function (xhr) {
            Info(-1, xhr.responseText);

        })
    }

</script>
